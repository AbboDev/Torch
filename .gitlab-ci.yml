stages:
  - build
  - deploy

cache:
  # key: $CI_COMMIT_REF_SLUG
  key:
    files:
      - package-lock.json
  paths:
    - .npm/

before_script:
  - npm ci --cache .npm --prefer-offline

build-game-job:
  stage: build
  only:
    - master
  image: node:16
  script:
    - npm install
    - npm run build:prod
  artifacts:
    paths:
      - build/

deploy-game-job:
  stage: deploy
  environment: production
  resource_group: production
  only:
    - master
  image: mwienk/docker-git-ftp
  script:
    - git config git-ftp.url "ftp://$FTP_HOST/$FTP_PATH"
    - git config git-ftp.user "$FTP_USER"
    - git config git-ftp.password "$FTP_PASSWD"
    - git ftp push --verbose

deploy-game-build-job:
  stage: deploy
  environment: production
  resource_group: production
  only:
    - master
  image: mwienk/docker-lftp:latest
  dependencies:
    - build-game-job
  script:
    - lftp -e "set ftp:ssl-allow false; mirror -eRnv build $FTP_PATH/build; exit;" -u $FTP_USER,$FTP_PASSWD $FTP_HOST

build-demo-job:
  stage: build
  only:
    - demo
  image: node:16
  script:
    - npm install
    - npm run build:dev
  artifacts:
    paths:
      - build/

deploy-demo-job:
  stage: deploy
  environment: staging
  resource_group: staging
  only:
    - demo
  image: mwienk/docker-git-ftp
  script:
    - git config git-ftp.url "ftp://$FTP_HOST/$FTP_PATH"
    - git config git-ftp.user $FTP_USER
    - git config git-ftp.password $FTP_PASSWD
    - git ftp push --verbose

deploy-demo-build-job:
  stage: deploy
  environment: staging
  resource_group: staging
  only:
    - demo
  image: mwienk/docker-lftp:latest
  dependencies:
    - build-demo-job
  script:
    - lftp -e "set ftp:ssl-allow false; mirror -eRnv build $FTP_PATH/build; exit;" -u $FTP_USER,$FTP_PASSWD $FTP_HOST
